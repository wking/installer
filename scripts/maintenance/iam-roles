#!/bin/sh
#
# Run iam-instance-profiles first to avoid errors like:
#
#   Cannot delete entity, must remove roles from instance profile first.

IDS="$(aws iam list-roles | jq -r '.Roles[] | select(.RoleName | startswith("ci-op-")) | select(now - (.CreateDate | strptime("%Y-%m-%dT%H:%M:%SZ") | mktime) > 4*60*60) | .RoleName')" &&
if test -z "${IDS}"
then
	exit 0
fi &&
echo "removing $(echo "${IDS}" | wc -w) cluster IAM roles over four hours old" &&
sleep 3 &&
ec=0 &&
for ID in ${IDS}
do
	POLICIES=$(aws iam list-role-policies --role-name "${ID}" | jq -r '.PolicyNames[]') &&
	if test -n "${POLICIES}"
	then  # avoid: An error occurred (DeleteConflict) when calling the DeleteRole operation: Cannot delete entity, must delete policies first.
		echo "removing $(echo "${POLICIES}" | wc -w) policies from role ${ID}" &&
		ecp=0 &&
		for POLICY in ${POLICIES}
		do
			aws iam delete-role-policy --role-name "${ID}" --policy-name "${POLICY}" ||
			ecp=1  # store a non-zero exit-code, but keep going
		done &&
		if test "${ecp}" -ne 0
		then
			ec=1 &&
			continue  # avoid: An error occurred (DeleteConflict) when calling the DeleteRole operation: Cannot delete entity, must delete policies first.
		fi
	fi &&
	aws iam delete-role --role-name "${ID}" ||
	ec=1  # store a non-zero exit-code, but keep going
done &&
exit "${ec}"
